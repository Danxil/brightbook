module.exports = function(db) {
    var db = require('./models')(db);
    function checkUser(req, res, next, checkGroup)
    {
        if (req.session.login)
            db.User.findOne({where: {login: req.session.login}}).then(function(user) {
                if (user) {
                    db.Group.findOne({where: {id: user.group}}).then(function(group) {
                        if (!group || checkGroup < group.id)
                            return res.redirect('/session');

                        req.currentUser = user;

                        req.currentUser.group = group.name;

                        next();
                    });
                }
                else
                    res.redirect('/session');
            });
        else if (req.cookies.logintoken) {
            var loginTokenCookie = JSON.parse(req.cookies.logintoken);

            db.LoginToken.findOne({where: {login: loginTokenCookie.login, series: loginTokenCookie.series}})
                .then(function(loginToken) {
                    if (!loginToken)
                        return res.redirect('/session');
                    else if (loginTokenCookie.token != loginToken.token)
                        return res.redirect('/session');

                    db.User.findOne({where: {login: loginTokenCookie.login}}).then(function(user) {
                        var newToken = loginToken.randomValue();

                        loginToken.updateAttributes({token: newToken}).then(function() {
                            req.session.login = user.login;

                            res.cookie('logintoken', loginToken.cookieValue(), {
                                expires: new Date(Date.now() + 2 * 604800000),
                                path: '/'
                            });

                            db.Group.findOne({where: {id: user.group}}).then(function(group) {
                                if (!group || checkGroup < group._doc.id)
                                    res.redirect('/session');

                                req.currentUser = user;

                                req.currentUser.group = group.name;

                                next();
                            });
                        });
                    });
                });
        }
        else
            res.redirect('/session');
    }

    return {
        admin: function(req, res, next)
        {
            checkUser(req, res, next, 0)
        },
        user: function(req, res, next)
        {
            checkUser(req, res, next, 1)
        }
    }
}